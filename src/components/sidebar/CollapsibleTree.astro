---
import Collapsible from './Collapsible.astro'
import { Icon } from 'astro-icon/components'

interface Props {
  title: string
  value: Record<string, unknown> | string
}
let { title, value } = Astro.props
const isTree = typeof value === 'object'

title = title
  .replace(/-\d+$/, '')
  .replaceAll('-', ' ')
  .replaceAll('_', ' ')
  .replace(/\.\w{3}$/, '')
value = isTree ? value : {}
---

<Collapsible
  {isTree}
  class:list={['max-w-full break-words capitalize my-1', isTree ? 'tree' : '']}
>
  <p
    slot="label"
    class="flex items-center py-2 pl-2 pr-1 cursor-pointer hover:bg-blue-500"
  >
    <span>{title}</span>
    <span class="tree-icon hidden flex-1 justify-end text-2xl">
      <Icon name="ic:sharp-arrow-drop-down" class="transition-all" />
    </span>
  </p>
  {
    Object.entries(value).map(([title, value]) => (
      <Astro.self {title} value={value as any} />
    ))
  }
</Collapsible>

<style is:global>
  .tree > label .tree-icon {
    display: flex !important;
  }
  .tree > .collapsible-checkbox:checked ~ label .tree-icon {
    @apply -scale-y-100;
  }
  .tree > .collapsible-checkbox:checked ~ label > * > * {
    @apply bg-zinc-100;
  }
</style>
